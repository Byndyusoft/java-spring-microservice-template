<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.byndyusoft.java</groupId>
    <artifactId>spring-microservice-template</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>java-spring-microservice-template</name>
    <description>Seed repo for all new services Java/Spring</description>

    <properties>
        <!-- build -->
        <java.version>17</java.version>
        <moduleName>byndyusoft.java</moduleName>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- spring -->
        <spring-cloud-dependencies.version>2021.0.5</spring-cloud-dependencies.version>
        <logbook-spring-boot-starter.version>2.14.0</logbook-spring-boot-starter.version>
        <!-- db -->
        <postgresql.version>42.5.0</postgresql.version>
        <liquibase.version>4.17.2</liquibase.version>
        <!-- mapstruct -->
        <org.mapstruct.version>1.5.2.Final</org.mapstruct.version>
        <!-- monitoring -->
        <io-micrometer.version>1.6.5</io-micrometer.version>
        <!-- api-docs -->
        <springdoc.version>1.6.12</springdoc.version>
        <swagger-annotations.version>1.6.8</swagger-annotations.version>
        <!-- testing -->
        <testcontainers.version>1.17.6</testcontainers.version>

        <sonar.exclusions>**/*Application.java</sonar.exclusions>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!--Properties in parent definition are prohibited-->
        <version>2.7.5</version>
        <relativePath/>
    </parent>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>logbook-spring-boot-starter</artifactId>
                <version>${logbook-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!--Test dependencies-->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>logbook-spring-boot-starter</artifactId>
        </dependency>

        <!-- db -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>

        <!-- monitoring -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <!-- api-docs -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>

        <!-- mapstruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-mapstruct-binding</artifactId>
            <scope>provided</scope>
            <version>0.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- common -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!--test-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-contract-wiremock</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-info-with-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <java.target>${maven.compiler.target}</java.target>
                                <time>${maven.build.timestamp}</time>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.15.0</version>
                <configuration>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources/</excludeRoot>
                    </excludeRoots>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.2.3</version>
                <!--                <configuration>-->
                <!--                    <excludeFilterFile>spotbugs.xml</excludeFilterFile>-->
                <!--                </configuration>-->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.2</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>10.1</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectories>${basedir}/src</sourceDirectories>
                    <checkstyleRules>
                        <module name="Checker">
                            <property name="charset" value="UTF-8"/>
                            <property name="fileExtensions" value="java, properties, xml"/>
                            <!-- Excludes all 'module-info.java' files              -->
                            <!-- See https://checkstyle.org/config_filefilters.html -->
                            <module name="BeforeExecutionExclusionFileFilter">
                                <property name="fileNamePattern" value="module\-info\.java$"/>
                            </module>
                            <!-- https://checkstyle.org/config_filters.html#SuppressionFilter -->
                            <module name="SuppressionFilter">
                                <property name="file" value="${org.checkstyle.google.suppressionfilter.config}"
                                          default="checkstyle-suppressions.xml"/>
                                <property name="optional" value="true"/>
                            </module>

                            <!-- Checks for whitespace                               -->
                            <!-- See http://checkstyle.org/config_whitespace.html -->
                            <module name="FileTabCharacter">
                                <property name="eachLine" value="true"/>
                            </module>

                            <module name="LineLength">
                                <property name="fileExtensions" value="java"/>
                                <property name="max" value="120"/>
                                <property name="ignorePattern"
                                          value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
                            </module>

                            <module name="TreeWalker">
                                <module name="OuterTypeFilename"/>
                                <module name="IllegalTokenText">
                                    <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
                                    <property name="format"
                                              value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
                                    <property name="message"
                                              value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
                                </module>
                                <module name="AvoidEscapedUnicodeCharacters">
                                    <property name="allowEscapesForControlCharacters" value="true"/>
                                    <property name="allowByTailComment" value="true"/>
                                    <property name="allowNonPrintableEscapes" value="true"/>
                                </module>
                                <module name="AvoidStarImport"/>
                                <module name="OneTopLevelClass"/>
                                <module name="NoLineWrap">
                                    <property name="tokens" value="PACKAGE_DEF, IMPORT, STATIC_IMPORT"/>
                                </module>
                                <module name="EmptyBlock">
                                    <property name="option" value="TEXT"/>
                                    <property name="tokens"
                                              value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
                                </module>
                                <module name="NeedBraces">
                                    <property name="tokens"
                                              value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
                                </module>
                                <module name="LeftCurly">
                                    <property name="tokens"
                                              value="ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF, OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF"/>
                                </module>
                                <module name="RightCurly">
                                    <property name="id" value="RightCurlySame"/>
                                    <property name="tokens"
                                              value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO"/>
                                </module>
                                <module name="RightCurly">
                                    <property name="id" value="RightCurlyAlone"/>
                                    <property name="option" value="alone"/>
                                    <property name="tokens"
                                              value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
                                </module>
                                <module name="SuppressionXpathSingleFilter">
                                    <!-- suppresion is required till https://github.com/checkstyle/checkstyle/issues/7541 -->
                                    <property name="id" value="RightCurlyAlone"/>
                                    <property name="query"
                                              value="//RCURLY[parent::SLIST[count(./*)=1] or preceding-sibling::*[last()][self::LCURLY]]"/>
                                </module>
                                <module name="WhitespaceAfter">
                                    <property name="tokens"
                                              value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE"/>
                                </module>
                                <module name="WhitespaceAround">
                                    <property name="allowEmptyConstructors" value="true"/>
                                    <property name="allowEmptyLambdas" value="true"/>
                                    <property name="allowEmptyMethods" value="true"/>
                                    <property name="allowEmptyTypes" value="true"/>
                                    <property name="allowEmptyLoops" value="true"/>
                                    <property name="ignoreEnhancedForColon" value="false"/>
                                    <property name="tokens"
                                              value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
                                    <message key="ws.notFollowed"
                                             value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
                                    <message key="ws.notPreceded"
                                             value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
                                </module>
                                <module name="OneStatementPerLine"/>
                                <module name="MultipleVariableDeclarations"/>
                                <module name="ArrayTypeStyle"/>
                                <module name="MissingSwitchDefault"/>
                                <module name="FallThrough"/>
                                <module name="UpperEll"/>
                                <module name="ModifierOrder"/>
                                <module name="EmptyLineSeparator">
                                    <property name="tokens"
                                              value="PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
                                    <property name="allowNoEmptyLineBetweenFields" value="true"/>
                                </module>
                                <module name="SeparatorWrap">
                                    <property name="id" value="SeparatorWrapDot"/>
                                    <property name="tokens" value="DOT"/>
                                    <property name="option" value="nl"/>
                                </module>
                                <module name="SeparatorWrap">
                                    <property name="id" value="SeparatorWrapComma"/>
                                    <property name="tokens" value="COMMA"/>
                                    <property name="option" value="EOL"/>
                                </module>
                                <module name="SeparatorWrap">
                                    <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/259 -->
                                    <property name="id" value="SeparatorWrapEllipsis"/>
                                    <property name="tokens" value="ELLIPSIS"/>
                                    <property name="option" value="EOL"/>
                                </module>
                                <module name="SeparatorWrap">
                                    <!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/258 -->
                                    <property name="id" value="SeparatorWrapArrayDeclarator"/>
                                    <property name="tokens" value="ARRAY_DECLARATOR"/>
                                    <property name="option" value="EOL"/>
                                </module>
                                <module name="SeparatorWrap">
                                    <property name="id" value="SeparatorWrapMethodRef"/>
                                    <property name="tokens" value="METHOD_REF"/>
                                    <property name="option" value="nl"/>
                                </module>
                                <module name="PackageName">
                                    <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
                                    <message key="name.invalidPattern"
                                             value="Package name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="TypeName">
                                    <property name="tokens"
                                              value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
                                    <message key="name.invalidPattern"
                                             value="Type name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="MemberName">
                                    <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
                                    <message key="name.invalidPattern"
                                             value="Member name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="ParameterName">
                                    <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                    <message key="name.invalidPattern"
                                             value="Parameter name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="LambdaParameterName">
                                    <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                    <message key="name.invalidPattern"
                                             value="Lambda parameter name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="CatchParameterName">
                                    <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                    <message key="name.invalidPattern"
                                             value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="LocalVariableName">
                                    <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                    <message key="name.invalidPattern"
                                             value="Local variable name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="PatternVariableName">
                                    <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                    <message key="name.invalidPattern"
                                             value="Pattern variable name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="ClassTypeParameterName">
                                    <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                                    <message key="name.invalidPattern"
                                             value="Class type name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="RecordComponentName">
                                    <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                    <message key="name.invalidPattern"
                                             value="Record component name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="RecordTypeParameterName">
                                    <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                                    <message key="name.invalidPattern"
                                             value="Record type name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="MethodTypeParameterName">
                                    <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                                    <message key="name.invalidPattern"
                                             value="Method type name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="InterfaceTypeParameterName">
                                    <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                                    <message key="name.invalidPattern"
                                             value="Interface type name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="NoFinalizer"/>
                                <module name="GenericWhitespace">
                                    <message key="ws.followed"
                                             value="GenericWhitespace ''{0}'' is followed by whitespace."/>
                                    <message key="ws.preceded"
                                             value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
                                    <message key="ws.illegalFollow"
                                             value="GenericWhitespace ''{0}'' should followed by whitespace."/>
                                    <message key="ws.notPreceded"
                                             value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
                                </module>
                                <module name="Indentation">
                                    <property name="basicOffset" value="2"/>
                                    <property name="braceAdjustment" value="2"/>
                                    <property name="caseIndent" value="2"/>
                                    <property name="throwsIndent" value="4"/>
                                    <property name="lineWrappingIndentation" value="4"/>
                                    <property name="arrayInitIndent" value="2"/>
                                </module>
                                <module name="AbbreviationAsWordInName">
                                    <property name="ignoreFinal" value="false"/>
                                    <property name="allowedAbbreviationLength" value="0"/>
                                    <property name="tokens"
                                              value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF, PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF, RECORD_COMPONENT_DEF"/>
                                </module>
                                <module name="OverloadMethodsDeclarationOrder"/>
                                <module name="VariableDeclarationUsageDistance"/>
                                <module name="CustomImportOrder">
                                    <property name="sortImportsInGroupAlphabetically" value="true"/>
                                    <property name="separateLineBetweenGroups" value="true"/>
                                    <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>
                                    <property name="tokens" value="IMPORT, STATIC_IMPORT, PACKAGE_DEF"/>
                                </module>
                                <module name="MethodParamPad">
                                    <property name="tokens"
                                              value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, SUPER_CTOR_CALL, ENUM_CONSTANT_DEF, RECORD_DEF"/>
                                </module>
                                <module name="NoWhitespaceBefore">
                                    <property name="tokens"
                                              value="COMMA, SEMI, POST_INC, POST_DEC, DOT, LABELED_STAT, METHOD_REF"/>
                                    <property name="allowLineBreaks" value="true"/>
                                </module>
                                <module name="ParenPad">
                                    <property name="tokens"
                                              value="ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF, EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL, METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA, RECORD_DEF"/>
                                </module>
                                <module name="OperatorWrap">
                                    <property name="option" value="NL"/>
                                    <property name="tokens"
                                              value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF, TYPE_EXTENSION_AND "/>
                                </module>
                                <module name="AnnotationLocation">
                                    <property name="id" value="AnnotationLocationMostCases"/>
                                    <property name="tokens"
                                              value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
                                </module>
                                <module name="AnnotationLocation">
                                    <property name="id" value="AnnotationLocationVariables"/>
                                    <property name="tokens" value="VARIABLE_DEF"/>
                                    <property name="allowSamelineMultipleAnnotations" value="true"/>
                                </module>
                                <module name="NonEmptyAtclauseDescription"/>
                                <module name="InvalidJavadocPosition"/>
                                <module name="JavadocTagContinuationIndentation"/>
                                <module name="SummaryJavadoc">
                                    <property name="forbiddenSummaryFragments"
                                              value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
                                </module>
                                <module name="JavadocParagraph"/>
                                <module name="RequireEmptyLineBeforeBlockTagGroup"/>
                                <module name="AtclauseOrder">
                                    <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
                                    <property name="target"
                                              value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
                                </module>
                                <module name="JavadocMethod">
                                    <property name="allowMissingParamTags" value="true"/>
                                    <property name="allowMissingReturnTag" value="true"/>
                                    <property name="allowedAnnotations" value="Override, Test"/>
                                    <property name="tokens"
                                              value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF"/>
                                </module>
                                <module name="MethodName">
                                    <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
                                    <message key="name.invalidPattern"
                                             value="Method name ''{0}'' must match pattern ''{1}''."/>
                                </module>
                                <module name="SingleLineJavadoc"/>
                                <module name="EmptyCatchBlock">
                                    <property name="exceptionVariableName" value="expected"/>
                                </module>
                                <module name="CommentsIndentation">
                                    <property name="tokens" value="SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN"/>
                                </module>
                                <!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter -->
                                <module name="SuppressionXpathFilter">
                                    <property name="file" value="${org.checkstyle.google.suppressionxpathfilter.config}"
                                              default="checkstyle-xpath-suppressions.xml"/>
                                    <property name="optional" value="true"/>
                                </module>
                                <module name="UnusedImports">
                                    <property name="processJavadoc" value="false"/>
                                </module>
                            </module>
                        </module>
                    </checkstyleRules>
                    <encoding>UTF-8</encoding>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--generate database schema in svg format-->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <id>generate-db-schema</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                import org.testcontainers.containers.PostgreSQLContainer

                                db = new PostgreSQLContainer("postgres:13.7")
                                db.start() //container will be stopped automatically by ryuk
                                project.properties.setProperty('testcontainers.db.url', db.getJdbcUrl())
                                project.properties.setProperty('testcontainers.db.username', db.getUsername())
                                project.properties.setProperty('testcontainers.db.password', db.getPassword())
                            </source>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.testcontainers</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>1.15.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>generate-db-schema</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>update</goal>
                        </goals>
                        <configuration>
                            <changeLogFile>${basedir}/src/main/resources/liquibase/db.changelog-master.xml
                            </changeLogFile>
                            <driver>org.postgresql.Driver</driver>
                            <url>${testcontainers.db.url}</url>
                            <username>${testcontainers.db.username}</username>
                            <password>${testcontainers.db.password}</password>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                            <logging>off</logging>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>us.fatehi</groupId>
                <artifactId>schemacrawler-maven-plugin</artifactId>
                <version>16.15.11.1</version>
                <executions>
                    <execution>
                        <id>generate-db-schema</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>schemacrawler</goal>
                        </goals>
                        <configuration>
                            <command>schema</command>
                            <url>${testcontainers.db.url}</url>
                            <user>${testcontainers.db.username}</user>
                            <password>${testcontainers.db.password}</password>
                            <outputDirectory>.</outputDirectory>
                            <outputfile>db-schema.svg</outputfile>
                            <outputformat>svg</outputformat>
                            <noinfo>true</noinfo>
                            <tables>^(?!.*(databasechangelog|txno_outbox|txno_version)).*$</tables>
                            <loglevel>OFF</loglevel>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>guru.nidi</groupId>
                        <artifactId>graphviz-java</artifactId>
                        <version>0.18.1</version>
                    </dependency>
                    <dependency>
                        <groupId>us.fatehi</groupId>
                        <artifactId>schemacrawler-postgresql</artifactId>
                        <version>16.15.11</version>
                    </dependency>
                    <dependency>
                        <groupId>org.graalvm.js</groupId>
                        <artifactId>js</artifactId>
                        <version>21.2.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>